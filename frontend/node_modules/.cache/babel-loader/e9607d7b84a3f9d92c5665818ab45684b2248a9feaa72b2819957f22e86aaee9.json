{"ast":null,"code":"var _jsxFileName = \"/home/ali-hussein/far-mart/frontend/src/pages/Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { cartService } from '../services/cartService';\nimport { toast } from 'react-toastify';\nimport './Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user,\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Redirect if not authenticated\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    // Only load cart if authenticated\n    if (isAuthenticated) {\n      loadCart();\n    }\n  }, [isAuthenticated, navigate]);\n\n  // ... rest of the Cart component code remains the same ...\n\n  // Add this check at the beginning of the component return\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ... rest of the component\n};\n_s(Cart, \"Fpkw1g+OJD4mxzPK8vMZlWGiQqc=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","cartService","toast","jsxDEV","_jsxDEV","Cart","_s","navigate","user","isAuthenticated","state","auth","cartItems","setCartItems","isLoading","setIsLoading","loadCart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ali-hussein/far-mart/frontend/src/pages/Cart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { cartService } from '../services/cartService';\nimport { toast } from 'react-toastify';\nimport './Cart.css';\n\nconst Cart = () => {\n  const navigate = useNavigate();\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Redirect if not authenticated\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    // Only load cart if authenticated\n    if (isAuthenticated) {\n      loadCart();\n    }\n  }, [isAuthenticated, navigate]);\n\n  // ... rest of the Cart component code remains the same ...\n\n  // Add this check at the beginning of the component return\n  if (!isAuthenticated || !user) {\n    return <div className=\"container\">Loading...</div>;\n  }\n\n  // ... rest of the component\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,IAAI;IAAEC;EAAgB,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACpE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACY,eAAe,EAAE;MACpBF,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACA,IAAIE,eAAe,EAAE;MACnBO,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACP,eAAe,EAAEF,QAAQ,CAAC,CAAC;;EAE/B;;EAEA;EACA,IAAI,CAACE,eAAe,IAAI,CAACD,IAAI,EAAE;IAC7B,oBAAOJ,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD;;EAEA;AACF,CAAC;AAAChB,EAAA,CA3BID,IAAI;EAAA,QACSL,WAAW,EACMD,WAAW;AAAA;AAAAwB,EAAA,GAFzClB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}